LIBRARY ieee;
USE ieee.std_logic_1164.ALL;

ENTITY regIF_ID IS
	PORT(
	
		i_clear,i_branch		: IN	STD_LOGIC;
		i_clock, i_PCh			: IN	STD_LOGIC;
		i_Enable					: IN STD_LOGIC;
		o_inst					: OUT	STD_LOGIC_VECTOR(31 downto 0);
		o_adder 					: OUT	STD_LOGIC_VECTOR(7 downto 0));
		
END regIF_ID;

ARCHITECTURE rtl OF regIF_ID IS

COMPONENT MEM_INST 
	PORT(
		i_resetBar	: IN	STD_LOGIC;
		i_ADDR		: IN	STD_LOGIC_VECTOR(7 downto 0);
		i_clock		: IN	STD_LOGIC;
		o_INTS      : OUT	STD_LOGIC_VECTOR(31 DOWNTO 0));

END COMPONENT;

COMPONENT addSUB
	PORT(
	i_xx, i_yy : IN STD_logic_vector(0 to 7);
	--i_cinBit :IN STD_logic;
	i_operation: IN STD_logic;
	o_s:OUT STD_logic_vector(0 to 7);
	o_c:OUT STD_logic);
	
END COMPONENT;

COMPONENT eightBitmux2to1
	PORT(
		i_op0:IN STD_LOGIC_VECTOR(7 downto 0);
		i_op1:IN STD_LOGIC_VECTOR(7 downto 0);
		i_selection: IN STD_LOGIC;
		o_choice:OUT STD_LOGIC_VECTOR(7 downto 0));
END COMPONENT;

COMPONENT reg8
	PORT(
		i_clear	: IN	STD_LOGIC;
		i_clock			: IN	STD_LOGIC;
		i_Enable			: IN STD_LOGIC;
		i_data: IN STD_LOGIC_VECTOR(7 downto 0);
		o_Q			: OUT	STD_LOGIC_VECTOR(7 downto 0));
		
END COMPONENT;

BEGIN

PC : reg8
	PORT MAP(
		i_clear
		i_clock
		i_Enable
		i_data
		o_Q
		);
		
END COMPONENT;





END rtl;